plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.9.6"
    id "io.freefair.lombok" version "6.0.0-m2"

}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

def allureVersion = '2.18.1',
    selenideVersion = '6.6.1',
    junitVersion = "5.8.2",
    slf4jVersion = '1.7.36',
    ownerVersion = "1.0.12",
    restAssured = "5.1.0",
    jacksonVersion = "2.11.2"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}
dependencies {
    testImplementation(
            "io.rest-assured:rest-assured:$restAssured",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "com.codeborne:selenide:$selenideVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"

    )
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

test {
    useJUnitPlatform()
}